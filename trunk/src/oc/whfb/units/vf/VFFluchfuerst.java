package oc.whfb.units.vf;import oc.BuildaHQ;import oc.BuildaMenu;import oc.Eintrag;import oc.OptionsEinzelUpgrade;import oc.RuestkammerStarter;public class VFFluchfuerst extends Eintrag {	RuestkammerStarter rkKraft;	RuestkammerStarter rkMount;	RuestkammerStarter rkBanner;	RuestkammerStarter rkMagic;	OptionsEinzelUpgrade oe1;	boolean astSelected = false;	boolean genSelected = false;	OptionsEinzelUpgrade oGen;	public VFFluchfuerst() {		name = BuildaHQ.translate("Fluchfürst");		grundkosten = 75;		seperator(12);		add(oGen = new OptionsEinzelUpgrade(ID, randAbstand, cnt, "", BuildaHQ.translate("General"), 0, false));				seperator();		add(new OptionsEinzelUpgrade(ID, randAbstand, cnt, "", BuildaHQ.translate("Zweihandwaffe"), 10));		add(new OptionsEinzelUpgrade(ID, randAbstand, cnt, "", BuildaHQ.translate("zus. Handwaffe"), 8));		seperator(1);		add(oe1 = new OptionsEinzelUpgrade(ID, randAbstand, cnt, "", BuildaHQ.translate("Lanze"), 12));		seperator();		rkMount = new RuestkammerStarter(ID, randAbstand, cnt, "VFMount", "");		rkMount.initKammer(false, false, true, false);		rkMount.setButtonText(BuildaHQ.translate("Reittier"));		add(rkMount);		seperator();		rkMagic = new RuestkammerStarter(ID, randAbstand, cnt, "VFMagicItems", "");		rkMagic.initKammer(false, false, true, false);		rkMagic.setButtonText(BuildaHQ.translate("Magische Gegenstände"));		add(rkMagic);		seperator();		rkBanner = new RuestkammerStarter(ID, randAbstand, cnt, "VFBanner", BuildaHQ.translate("Armeestandartenträger"));		rkBanner.initKammer(true, false, false);		rkBanner.setGrundkosten(25);		add(rkBanner);		complete();	}	@Override	public void refreshen() {		oe1.setAktiv(rkMount.getKosten() > 0);			rkMagic.getKammer().switchEntry(BuildaHQ.translate("Rüstung der Nacht"), rkMount.getKosten() == 0);		rkMagic.setAktiv(rkBanner.getKosten() <= 25);		// Unique entry: AST		boolean astGlobal = ( BuildaHQ.getCountFromInformationVector("VFast") > 0 ? true : false );		if(astGlobal && !astSelected) rkBanner.setAktiv(false);		else rkBanner.setAktiv(true);		if(rkBanner.isSelected()) {			astSelected = true;			BuildaHQ.setInformationVectorValue("VFast", 1);		} else {			if(astSelected) {				astSelected = false;				BuildaHQ.setInformationVectorValue("VFast", 0);				BuildaHQ.refreshEntries(2);			}		}				// Unique entry: GENERAL		boolean genGlobal = ( BuildaHQ.getCountFromInformationVector("Gen") > 0 ? true : false );		if(genGlobal && !genSelected) oGen.setAktiv(false);		else oGen.setAktiv(true);		if(oGen.isSelected()) {			genSelected = true;			BuildaHQ.setInformationVectorValue("Gen", 1);		} else {			if(genSelected) {				genSelected = false;				BuildaHQ.setInformationVectorValue("Gen", 0);				BuildaHQ.refreshEntries(2);			}		}				if ( !astGlobal ) rkBanner.setAktiv(!oGen.isSelected());		if ( !genGlobal ) oGen.setAktiv(!rkBanner.isSelected());				/*if (ico != null ) panel.remove(ico);		if ( BuildaMenu.bilderAneigen.isSelected() ) {			ico = BuildaHQ.createPictureJLabel(BuildaHQ.IMAGEPFAD + reflectionKennung.toLowerCase() + "/" + getClass().getSimpleName() + JPG);			ico.setLocation((290 - (ico.getSize().width - 100) / 2), 30);			panel.add(ico);		} */	}	@Override	public void deleteYourself() {		if(astSelected) {			BuildaHQ.setInformationVectorValue("VFast", 0);		}		if(genSelected) {			BuildaHQ.setInformationVectorValue("Gen", 0);		}		super.deleteYourself();	}}